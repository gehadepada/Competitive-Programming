#include <bits/stdc++.h>
using namespace std;
#define all(v) (v).begin(), (v).end()
#define fast()  ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int MOD = 1e9 + 7;

int solve(vector<int> &a , int  i , int  n , vector<vector<int>>&dp,int last ) {
    if (i >= n ) {
        return 0 ;
    }
    if (dp[i][last] !=-1) {
        return dp[i][last];
    }

    int res= solve(a, i+1, n, dp, 0) + 1;
    if (a[i] == 1) {
        if (last !=1) {
            res=min(res , solve(a , i+1 , n , dp, 1));
        }
    }
    else if (a[i]==2) {
        if (last!=2) {
            res=min(res , solve(a , i+1 , n , dp, 2));
        }

    }
    else if (a[i]==3) {
        if (last==0) {
            res=min({res , solve(a , i+1 , n , dp, 1) ,solve(a , i+1 , n , dp, 2) });
        }
        else {
            if (last !=1) {
                res=min(res , solve(a , i+1 , n , dp, 1));
            }
            if (last!=2) {
                res=min(res , solve(a , i+1 , n , dp, 2));
            }

        }
    }
    return dp[i][last]=res;
}

int main() {
    fast();
    int t = 1 ;
  //  cin >> t;
    while (t--) {
      int n;
        cin >> n ;
        vector<int>v(n);
        for (int i = 0; i < n; i++) {
            cin >> v[i];
        }
        vector<vector<int>>dp(n+1 , vector<int>(5,-1));
        cout<<solve(v,0,n ,dp , 0);

    }
}
